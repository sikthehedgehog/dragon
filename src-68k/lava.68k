;****************************************************************************
; LavaRiseSpeed, LavaFloodSpeed
; Speed at which lava moves for each difficulty
;****************************************************************************

LavaRiseSpeed:
    dc.w    $80, $C0, $100
LavaFloodSpeed:
    dc.w    $200, $240, $280

;****************************************************************************
; InitLavaBurst
; Initializes the collision box of bursting lava.
;----------------------------------------------------------------------------
; input a6.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: d5-d7, a4-a6
;****************************************************************************

InitLavaBurst:
    move.w  #-$20, OBJ_BOXX1(a6)
    move.w  #-$20, OBJ_BOXY1(a6)
    move.w  #$1F, OBJ_BOXX2(a6)
    move.w  #$3F, OBJ_BOXY2(a6)
    
    rts                                 ; End of subroutine

;****************************************************************************
; RunLavaBurst
; Executes the behavior for lava bursting from the floor.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

RunLavaBurst:
    tst.b   OBJ_HEALTH(a0)              ; Frozen?
    bne.s   @NotFrozen
    tst.w   OBJ_TIMER(a0)
    beq.s   @Chilled
    subq.w  #1, OBJ_TIMER(a0)
@Chilled:
    rts
@NotFrozen:
    
    btst.b  #OF_ACTIVE, OBJ_FLAGS(a0)   ; Bursted already?
    bne.s   @Bursted
    
    move.w  OBJ_X(a0), d7               ; Should it burst?
    sub.w   (PlayerX), d7
    cmp.w   #-$38, d7
    bgt.s   @KeepIdle
    
    bset.b  #OF_ACTIVE, OBJ_FLAGS(a0)   ; BURST!!
    bsr     TriggerQuake
    moveq   #SFX_DEMOLISH, d7
    jsr     (PlaySFX).w
    move.w  OBJ_X(a0), d7
    move.w  OBJ_Y(a0), d6
    sub.w   #$20, d6
    bsr     ThrowDerbisUp
    
@KeepIdle:
    rts                                 ; End of subroutine

;----------------------------------------------------------------------------

@Bursted:
    move.l  a0, a6                      ; Getting frozen?!
    bsr     CollidesMagic
    tst.w   d7
    beq.s   @StillHot
    
    moveq   #SFX_TRANSFORM, d7          ; Stuff as usual
    jsr     (PlaySFX).w
    move.l  #SCORE_MAGIC, d7
    bsr     AddScore
    
    clr.b   OBJ_HEALTH(a0)
    move.w  #$20, OBJ_TIMER(a0)
    rts
@StillHot:
    
    move.l  a0, a6                      ; Lava hurts!
    bsr     CollidesPlayer
    tst.w   d7
    beq.s   @NotHurting
    move.w  OBJ_X(a0), d7
    move.w  OBJ_Y(a0), d6
    bsr     HurtPlayer
@NotHurting:
    
    move.w  OBJ_TIMER(a0), d7           ; Timer because we need to keep
    addq.w  #1, d7                        ; looping forever
    cmp.w   #12, d7
    beq.s   @Loop
    
    move.w  d7, OBJ_TIMER(a0)           ; Go upwards
    sub.w   #$08, OBJ_Y(a0)
    rts
    
@Loop:
    move.w  #8, OBJ_TIMER(a0)           ; Loop position
    add.w   #$20-$08, OBJ_Y(a0)
    
    rts                                 ; End of subroutine

;****************************************************************************
; DrawLavaBurst
; Draws lava bursting from the floor.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

DrawLavaBurst:
    move.w  OBJ_X(a0), d0               ; Get position on screen
    move.w  OBJ_Y(a0), d1
    sub.w   (CameraX), d0
    sub.w   (CameraY), d1
    
    move.w  #$4000+VramLavaBurst, d2    ; Determine palette
    tst.b   OBJ_HEALTH(a0)
    bne.s   @Hot
    btst.b  #0, OBJ_TIMER+1(a0)
    bne.s   @Hot
    or.w    #$2000, d2
@Hot:
    
    lea     (SprLavaBurst), a6          ; Draw it
    jsr     (AddMetasprite).w
    
    rts                                 ; End of subroutine

;****************************************************************************
; InitRisingLava
; Initializes the collision box of rising lava.
;----------------------------------------------------------------------------
; input a6.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: d5-d7, a4-a6
;****************************************************************************

InitRisingLava:
    move.w  #0, OBJ_BOXX1(a6)           ; Set up collision box
    move.w  #0, OBJ_BOXY1(a6)
    move.w  #$3FFF, OBJ_BOXX2(a6)
    move.w  #$3FFF, OBJ_BOXY2(a6)
    
    move.w  OBJ_Y(a6), d7               ; Just in case...
    move.w  d7, (LavaPos)
    sub.w   (CameraY), d7
    sub.w   #$10, d7
    move.w  d7, (LavaScreenPos)
    
    rts                                 ; End of subroutine

;****************************************************************************
; RunRisingLava
; Executes the behavior for rising lava.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

RunRisingLava:
    moveq   #0, d7                      ; How quick to rise?
    move.b  (Difficulty), d7
    add.w   d7, d7
    lea     LavaRiseSpeed(pc), a6
    move.w  (a6,d7.w), d7
    add.w   (Subpixel), d7
    asr.w   #8, d7
    
    move.w  OBJ_Y(a0), d0               ; Make lava rise
    sub.w   d7, d0
    move.w  d0, OBJ_Y(a0)
    sub.w   #$10, d0
    move.w  d0, (LavaPos)
    
    move.l  a0, a6                      ; Hurt player when she touches lava
    bsr     CollidesPlayer
    tst.w   d7
    beq.s   @NoCollision
    move.w  (PlayerX), d7
    move.w  OBJ_Y(a0), d6
    bsr     HurtPlayer
@NoCollision:
    
    move.w  (PlayerY), d7               ; Being submerged in lava is
    sub.w   OBJ_Y(a0), d7                 ; instadeath (OUCH!!)
    cmp.w   #$20, d7
    blt.s   @NoInstadeath
    bsr     KillPlayer
@NoInstadeath:
    
    rts                                 ; End of subroutine

;****************************************************************************
; InitLavaFlood
; Initializes the collision box of the lava flood.
;----------------------------------------------------------------------------
; input a6.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: d5-d7, a4-a6
;****************************************************************************

InitLavaFlood:
    move.w  #-$3FFF, OBJ_BOXX1(a6)      ; Set up collision box
    move.w  #0, OBJ_BOXY1(a6)
    move.w  #-1, OBJ_BOXX2(a6)
    move.w  #$3F, OBJ_BOXY2(a6)
    
    move.w  OBJ_X(a6), (LavaPos)        ; Just in case...
    clr.w   (LavaScreenPos)
    
    rts                                 ; End of subroutine

;****************************************************************************
; RunLavaFlood
; Executes the behavior for the lava flood.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

RunLavaFlood:
    moveq   #0, d7                      ; How quick to flood?
    move.b  (Difficulty), d7
    add.w   d7, d7
    lea     LavaFloodSpeed(pc), a6
    move.w  (a6,d7.w), d7
    add.w   (Subpixel), d7
    asr.w   #8, d7
    
    move.w  OBJ_X(a0), d0               ; Lava is flooding!
    add.w   d7, d0
    move.w  d0, OBJ_X(a0)
    move.w  d0, (LavaPos)
    
    move.l  a0, a6                      ; Caught up to the player?
    bsr     CollidesPlayer
    tst.w   d7
    beq.s   @NoAttack
    move.w  OBJ_X(a0), d7
    move.w  OBJ_Y(a0), d6
    bsr     HurtPlayer
@NoAttack:
    
    move.w  OBJ_X(a0), d7               ; Flooded her in? (OUCH!)
    sub.w   (PlayerX), d7
    ble.s   @NoKill
    bsr     KillPlayer
@NoKill:
    
    rts                                 ; End of subroutine

;****************************************************************************
; DrawLavaFlood
; Draws the sprite end for the lava flood.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

DrawLavaFlood:
    move.w  OBJ_X(a0), d0               ; Determine coordinates on screen
    move.w  OBJ_Y(a0), d1
    sub.w   (CameraX), d0
    sub.w   (CameraY), d1
    
    move.w  (Anim), d7                  ; Determine sprite to use
    and.w   #$03<<2, d7
    lea     @AnimTable(pc), a6
    move.l  (a6,d7.w), a6
    
    move.w  #$C000+VramLavaFlood, d2    ; Draw the sprite
    jsr     (AddMetasprite).w
    
    rts                                 ; End of subroutine

;----------------------------------------------------------------------------

@AnimTable:
    dc.l    SprLavaFlood_1
    dc.l    SprLavaFlood_2
    dc.l    SprLavaFlood_3
    dc.l    SprLavaFlood_4

;****************************************************************************
; InitLavaBreak
; Sets up the lava bursting from the wall at the end of the chase.
;----------------------------------------------------------------------------
; breaks: d5-d7, a4-a6
;****************************************************************************

InitLavaBreak:
    bsr     TriggerQuake                ; Start with a quake
    moveq   #SFX_DEMOLISH, d7
    jsr     (PlaySFX).w
    move.w  OBJ_X(a6), d7
    move.w  OBJ_Y(a6), d6
    bsr     ThrowDerbisAway
    
    rts                                 ; End of subroutine

;****************************************************************************
; RunLavaHole
; Executes the behavior for the hole left by the lava flood.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

RunLavaHole:
    subq.w  #1, OBJ_TIMER(a0)           ; Spawn another piece of lava?
    bgt.s   @NoSpawning
    move.w  #$0F, OBJ_TIMER(a0)
    move.w  OBJ_X(a0), d7
    move.w  OBJ_Y(a0), d6
    moveq   #OBJTYPE_LAVAFALL, d5
    bsr     AddObject
    
@NoSpawning:
    rts                                 ; End of subroutine

;****************************************************************************
; DrawLavaHole
; Draws the hole left by the lava flood.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

DrawLavaHole:
    move.w  OBJ_X(a0), d0               ; Get position on screen
    move.w  OBJ_Y(a0), d1
    sub.w   (CameraX), d0
    sub.w   (CameraY), d1
    
    move.w  (Anim), d7                  ; Get sprite for top of falling lava
    lsr.w   #1, d7
    and.w   #$03<<1, d7
    lea     @TopAnim(pc), a6
    move.w  (a6,d7.w), d2
    
    lea     (SprLavaFallTop), a6        ; Draw top of falling lava
    jsr     (AddMetasprite).w
    
    move.w  #$2000+VramLavaHole, d2     ; Draw hole
    lea     (SprLavaHole), a6
    jsr     (AddMetasprite).w
    
    rts                                 ; End of subroutine

;----------------------------------------------------------------------------

@TopAnim:
    dc.w    $4000+VramLavaFallTop
    dc.w    $4000+VramLavaFallTop+12
    dc.w    $4000+VramLavaFallTop+24
    dc.w    $4000+VramLavaFallTop+36

;****************************************************************************
; RunLavaFall
; Executes the behavior for the lava falling from the hole.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

RunLavaFall:
    move.w  OBJ_Y(a0), d7               ; Keep falling
    add.w   #2, d7
    move.w  d7, OBJ_Y(a0)
    
    moveq   #0, d6                      ; Gone past the bottom of the map?
    move.b  (MapHeight), d6
    lsl.w   #5, d6
    cmp.w   d6, d7
    bge     DestroySelf
    
    rts                                 ; End of subroutine

;****************************************************************************
; DrawLavaFall
; Draws the lava falling from the hole.
;----------------------------------------------------------------------------
; input a0.l ... Pointer to object
;----------------------------------------------------------------------------
; breaks: all but a0
;****************************************************************************

DrawLavaFall:
    move.w  OBJ_X(a0), d0               ; Get position on screen
    move.w  OBJ_Y(a0), d1
    sub.w   (CameraX), d0
    sub.w   (CameraY), d1
    
    move.w  #$4000+VramLavaFall, d2     ; Draw lava
    lea     (SprLavaFall), a6
    jsr     (AddMetasprite).w
    
    rts                                 ; End of subroutine
