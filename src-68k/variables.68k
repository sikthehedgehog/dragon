;****************************************************************************
; Global variables used everywhere
;****************************************************************************

                    rsset $FF0000
JoyHold:            rs.b 1          ; Joypad buttons being held down
JoyPress:           rs.b 1          ; Joypad buttons that just got pressed

RandSeed:           rs.w 1          ; Seed for the RNG

HBlank:             rs.b $80        ; Where the hblank handler resides
DMABuf:             rs.w $200       ; Buffer for DMA commands
DMABufEnd:          rs.l 1          ; End address of the above buffer
VBlankFlag:         rs.b 1          ; Set when vblank starts
NumSprites:         rs.b 1          ; Sprites drawn so far
SpriteBuf:          rs.w 4*80       ; Sprite table buffer
PaletteBuf:         rs.w 4*$10      ; Palette buffer
HScrollABuf:        rs.w 224        ; Hscroll buffer for plane A
HScrollBBuf:        rs.w 224        ; Hscroll buffer for plane B
VScrollABuf:        rs.w 20         ; Vscroll buffer for plane A
VScrollBBuf:        rs.w 20         ; Vscroll buffer for plane B
WantsFade:          rs.b 1          ; Set this to fade in the next frame
BlinkFlag:          rs.b 1          ; Toggled every *real* frame

BGMToPlay:          rs.b 1          ; ID of BGM to be played next frame
SFXToPlay:          rs.b 1          ; ID of SFX to be played next frame
CurrentSFX:         rs.b 1          ; ID of SFX currently playing
SoundTest:          rs.b 1          ; Sound test :)

Anim:               rs.w 1          ; Global animation timer
Subpixel:           rs.w 1          ; For faking subpixel precision

Difficulty:         rs.b 1          ; Difficulty level
StartLives:         rs.b 1          ; Starting lives count
ControlSet:         rs.b 1          ; Which control mapping is being used
MagicButton:        rs.b 1          ; Button used for magic
AttackButton:       rs.b 1          ; Button used for attacking
JumpButton:         rs.b 1          ; Button used for jumping

Score:              rs.l 1          ; Current score (BCD)
NextLife:           rs.l 1          ; Score when next 1up is awarded (BCD)
Lives:              rs.b 1          ; How many lives are left (BCD)
Stage:              rs.b 1          ; Current stage
Cheats:             rs.b 1          ; Enabled cheats
                    rs.b 1

   if DEBUG_HUD
LastUsage:          rs.b 1          ; Last CPU usage (by HV counter value)
                    rs.b 1
   endc

;----------------------------------------------------------------------------
; These need to be preserved across rooms but that breaks local variables so
; this stuff is here instead
;----------------------------------------------------------------------------

Supermagic:         rs.w 1          ; How much time left with supermagic
PlayerHealth:       rs.b 1          ; Health points left (0..3)
                    rs.b 1

LocalRAM:           rs.b 0          ; Where screen-specific data starts

;****************************************************************************
; Variables used in-game
;****************************************************************************

                    rsset LocalRAM

GameState:          rs.b 1          ; Current state of the game

GameSprites:        rs.b 1          ; Where the non-HUD sprites start
AltSpriteBuf:       rs.w 4*80       ; Alternate sprite buffer (for water)

CameraX:            rs.w 1          ; Camera's horizontal position
CameraY:            rs.w 1          ; Camera's vertical position
CameraLeft:         rs.w 1          ; Left limit of the camera
CameraRight:        rs.w 1          ; Right limit of the camera
CameraTop:          rs.w 1          ; Top limit of the camera
CameraBottom:       rs.w 1          ; Bottom limit of the camera
QuakeTimer:         rs.w 1          ; How long does the quake last?

MapWidth:           rs.b 1          ; Width of the map in tiles
MapHeight:          rs.b 1          ; Height of the map in tiles
MapRight:           rs.w 1          ; Right limit of the map (left is 0)
MapBottom:          rs.w 1          ; Bottom limit of the map (top is 0)
MapOffsets:         rs.w $100       ; Row address offsets look-up table
TileAddr:           rs.l 1          ; Pointer to graphics map
CollAddr:           rs.l 1          ; Pointer to collision map
ColBuffer:          rs.w $10*$08    ; Buffer for drawing a column
RowBuffer:          rs.w $10*$10    ; Buffer for drawing a row

ParallaxInit:       rs.l 1          ; Subroutine used to set up the parallax
ParallaxFunc:       rs.l 1          ; Subroutine used to update the parallax
WaterHeight:        rs.w 1          ; Height of the water ($7FFF = no water)

PlayerX:            rs.w 1          ; Merlina's horizontal position
PlayerY:            rs.w 1          ; Merlina's vertical position
PlayerXSpeed:       rs.w 1          ; Merlina's horizontal momentum
PlayerYSpeed:       rs.w 1          ; Merlina's vertical momentum
PlayerFlags:        rs.b 1          ; Status flags (see PF_*)
PlayerPose:         rs.b 1          ; Merlina's last pose (see PA_*)
PlayerAttack:       rs.b 1          ; Frames left from attacking
PlayerMagic:        rs.b 1          ; Frames left from using magic
PlayerFlash:        rs.b 1          ; Invulnerability frames left
DeathTimer:         rs.b 1          ; Timer used to delay respawning

OldPosition:        rs.l 8          ; Where the player has been lately

PlayerMapping:      rs.l 1          ; Merlina's current sprite mapping
PlayerGfxAddr:      rs.l 1          ; Merlina's current tiles (address)
PlayerGfxSize:      rs.w 1          ; Merlina's current tiles (size)
PlayerAnimLen:      rs.w 1          ; Time left until animation updates
PlayerAnimNext:     rs.l 1          ; Next frame in the animation

MagicMeter:         rs.b 1          ; How much magic has been recharged
NextMagicSlot:      rs.b 1          ; Which slot to use next for magic hitbox
MagicBounds:        rs.w 4*4        ; Magic hitboxes' boundaries
HealthBlink:        rs.w 1          ; To make the health meter blink

ObjList:            rs.b OBJ_SIZE*MAX_OBJ ; Object list
FreeRAM:            rs.b 0          ; Free space for more decompression

;----------------------------------------------------------------------------

                    rsset FreeRAM

LavaPos:            rs.w 1          ; Position of rising or flooding lava
LavaScreenPos:      rs.w 1          ; Same as above but in screen coordinates

LavaPattern:        rs.w $40*2      ;
LavaNoPattern:      rs.w $40*2      ;
LavaTopPattern:     rs.w $40*2*8    ;

;****************************************************************************
; Variables used in menus and the title screen
; (title screen is just a fancy menu in some sense :P)
;****************************************************************************

                    rsset LocalRAM

MenuData:           rs.l 1          ; Pointer to menu structure
CurrentOption:      rs.b 1          ; Currently selected option
NumOptions:         rs.b 1          ; Count how many options are there
QuitMenu:           rs.b 1          ; Set to quit the menu
                    rs.b 1

ControlsBuf:        rs.b $10*3      ; Controls string buffer
SoundTestBuf:       rs.b 6          ; Sound test ID string buffer
                                      ; ...why 6 bytes long and not 4?

                    if DEBUG_MENU
StageNameBuf:       rs.b 22         ; Stage name string buffer
                    endc

;****************************************************************************
; Tile IDs for graphics in-game
;****************************************************************************

                    rsreset
                    
                    rs.b 1          ; Blank tile
VramPlayer:         rs.b 50         ; Merlina's sprite
VramTileset:        rs.b 158        ; Tileset graphics
VramCandle:         rs.b 2*2        ; Candle fire
VramChain:          rs.b 2*2        ; Platform chains
VramHUDHealth:      rs.b 4*3        ; HUD health
VramHUDCross:       rs.b 1          ; HUD cross (the "Ã—")
VramHUDNumber:      rs.b 10*2       ; HUD digits
VramHUDQuestion:    rs.b 2          ; HUD question mark ("?")
VramHUDPercent:     rs.b 2          ; HUD percent sign ("%")
VramHUDBar:         rs.b 14*2       ; HUD energy bar
VramHUDPause:       rs.b 5*2        ; "PAUSE"
VramMagic:          rs.b 2*2*2      ; Magic sparkles
VramTransform:      rs.b 9+16+16    ; Magic transformation puff
VramRedPotion:      rs.b 3*3        ; Red potion
VramYellowPotion:   rs.b 3*3        ; Yellow potion
VramCross:          rs.b 3*3        ; Cross
VramDoorClose:      rs.b 28         ; Closed door
VramDoorOpen:       rs.b 28         ; Opened door
VramPlatform:       rs.b 4*2        ; Platform
VramDerbis:         rs.b 2*2        ; Derbis rocks
VramAngel:          rs.b 12+6+6     ; Rescued souls
VramSpikeball:      rs.b 16         ; Spikeballs
VramLink:           rs.b 2*2        ; Spikeball chain links
VramBaseLink:       rs.b 2*2        ; Spikeball chain base
VramPivot:          rs.b 2*4        ; Spikeball pivot
VramGhost:          rs.b 12+8*2+20  ; Ghosts
VramSpider:         rs.b 15+17      ; Spiders
VramSpiderRope:     rs.b 4          ; Spider rope
VramPiranha:        rs.b 46         ; Piranhas
VramFish:           rs.b 6          ; Tiny fishes
VramKnight:         rs.b 60         ; Undead knights

StageVRAM:          rs.b 0          ; Stage-specific graphics
VusageIngame:       rs.b 0

;----------------------------------------------------------------------------

                    rsset StageVRAM
VramCogwheel:       rs.b 4*4        ; Cogwheel base
VramCog:            rs.b 3*3*9      ; Cogwheel cogs

;----------------------------------------------------------------------------

                    rsset StageVRAM
VramFog:            rs.b 7          ; Fog outdoors

;----------------------------------------------------------------------------

                    rsset StageVRAM
VramDoppleganger:   rs.b 50         ; Dopplganger Merlina

;----------------------------------------------------------------------------

                    rsset StageVRAM
VramLavaBurst:      rs.b 4*4        ; Bursting lava
VramRisingLava:     rs.b 4*2+4*4    ; Rising lava
VramLavaFlood:      rs.b 4*4        ; Lava flood sprite

;****************************************************************************
; Tile IDs for graphics in menus (and title screen)
;****************************************************************************

                    rsreset
                    rs.b 1          ; Blank tile
VramFont:           rs.b 41*2       ; Font for the text
VramMenuBG:         rs.b 8          ; Menu background
VramTitleLogo:      rs.b 0          ; Game name in the title screen
